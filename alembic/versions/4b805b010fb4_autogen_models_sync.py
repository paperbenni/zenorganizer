"""autogen: models sync

Revision ID: 4b805b010fb4
Revises: ae91783474ca
Create Date: 2025-08-27 15:05:30.459166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4b805b010fb4'
down_revision: Union[str, Sequence[str], None] = 'ae91783474ca'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - adjusted for SQLite ###
    # Add the column with a server default and nullable=True so existing rows
    # can be backfilled. Then alter the column to be NOT NULL using a batch
    # operation (Alembic will recreate the table on SQLite).
    op.add_column(
        'memory',
        sa.Column('relevance', sa.Float(), nullable=True, server_default=sa.text('1.0')),
    )
    op.create_index(op.f('ix_message_archive_id'), 'message_archive', ['id'], unique=False)

    with op.batch_alter_table('memory') as batch_op:
        batch_op.alter_column(
            'relevance',
            existing_type=sa.Float(),
            nullable=False,
            existing_server_default=sa.text('1.0'),
            server_default=None,
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_message_archive_id'), table_name='message_archive')
    op.drop_column('memory', 'relevance')
    # ### end Alembic commands ###
